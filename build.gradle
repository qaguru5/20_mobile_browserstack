plugins {
    id "java-library"
   /* id "io.qameta.allure" version "2.8.1"
    id "io.freefair.lombok" version "6.0.0-m2"*/
}

group "org.example"
version "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

def selenideVersion = "5.22.1",
    junitVersion = "5.7.2"
/*
def allureVersion = "2.14.0"

allure {
    version = allureVersion
    autoconfigure = true //=плагин аллюра будет все конфигурировать автоматически
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}
*/
dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'
    testImplementation (
            "io.appium:java-client:7.5.1",
            "com.codeborne:selenide:$selenideVersion",
            /*
            "io.rest-assured:rest-assured:4.4.0", //client
            "io.qameta.allure:allure-rest-assured:2.14.0",
            "org.aeonbits.owner:owner:1.0.12", //config
            "org.assertj:assertj-core:3.19.0",
            "org.slf4j:slf4j-simple:1.7.30",
            "org.aspectj:aspectjweaver:1.9.6",
            "com.fasterxml.jackson.core:jackson-databind:2.12.3", //json*/
            "org.junit.jupiter:junit-jupiter:$junitVersion"
    )
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}
/*
compileTestJava {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}*/

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}